/**
 * This class is generated by jOOQ
 */
package diamond.cms.server.model.jooq;


import diamond.cms.server.model.jooq.tables.CArticle;
import diamond.cms.server.model.jooq.tables.CArticleTag;
import diamond.cms.server.model.jooq.tables.CCatalog;
import diamond.cms.server.model.jooq.tables.CComment;
import diamond.cms.server.model.jooq.tables.CEmailConfig;
import diamond.cms.server.model.jooq.tables.CEmailSend;
import diamond.cms.server.model.jooq.tables.CGuest;
import diamond.cms.server.model.jooq.tables.CIpLocation;
import diamond.cms.server.model.jooq.tables.CKeyword;
import diamond.cms.server.model.jooq.tables.CPageView;
import diamond.cms.server.model.jooq.tables.CSetting;
import diamond.cms.server.model.jooq.tables.CTag;
import diamond.cms.server.model.jooq.tables.CUser;
import diamond.cms.server.model.jooq.tables.records.CArticleRecord;
import diamond.cms.server.model.jooq.tables.records.CArticleTagRecord;
import diamond.cms.server.model.jooq.tables.records.CCatalogRecord;
import diamond.cms.server.model.jooq.tables.records.CCommentRecord;
import diamond.cms.server.model.jooq.tables.records.CEmailConfigRecord;
import diamond.cms.server.model.jooq.tables.records.CEmailSendRecord;
import diamond.cms.server.model.jooq.tables.records.CGuestRecord;
import diamond.cms.server.model.jooq.tables.records.CIpLocationRecord;
import diamond.cms.server.model.jooq.tables.records.CKeywordRecord;
import diamond.cms.server.model.jooq.tables.records.CPageViewRecord;
import diamond.cms.server.model.jooq.tables.records.CSettingRecord;
import diamond.cms.server.model.jooq.tables.records.CTagRecord;
import diamond.cms.server.model.jooq.tables.records.CUserRecord;

import javax.annotation.Generated;

import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>cms</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CArticleRecord> KEY_C_ARTICLE_PRIMARY = UniqueKeys0.KEY_C_ARTICLE_PRIMARY;
    public static final UniqueKey<CArticleTagRecord> KEY_C_ARTICLE_TAG_PRIMARY = UniqueKeys0.KEY_C_ARTICLE_TAG_PRIMARY;
    public static final UniqueKey<CCatalogRecord> KEY_C_CATALOG_PRIMARY = UniqueKeys0.KEY_C_CATALOG_PRIMARY;
    public static final UniqueKey<CCommentRecord> KEY_C_COMMENT_PRIMARY = UniqueKeys0.KEY_C_COMMENT_PRIMARY;
    public static final UniqueKey<CEmailConfigRecord> KEY_C_EMAIL_CONFIG_PRIMARY = UniqueKeys0.KEY_C_EMAIL_CONFIG_PRIMARY;
    public static final UniqueKey<CEmailSendRecord> KEY_C_EMAIL_SEND_PRIMARY = UniqueKeys0.KEY_C_EMAIL_SEND_PRIMARY;
    public static final UniqueKey<CGuestRecord> KEY_C_GUEST_PRIMARY = UniqueKeys0.KEY_C_GUEST_PRIMARY;
    public static final UniqueKey<CGuestRecord> KEY_C_GUEST_EMAIL_UNIQUE = UniqueKeys0.KEY_C_GUEST_EMAIL_UNIQUE;
    public static final UniqueKey<CIpLocationRecord> KEY_C_IP_LOCATION_PRIMARY = UniqueKeys0.KEY_C_IP_LOCATION_PRIMARY;
    public static final UniqueKey<CKeywordRecord> KEY_C_KEYWORD_PRIMARY = UniqueKeys0.KEY_C_KEYWORD_PRIMARY;
    public static final UniqueKey<CKeywordRecord> KEY_C_KEYWORD_KEYWORD_UNIQUE = UniqueKeys0.KEY_C_KEYWORD_KEYWORD_UNIQUE;
    public static final UniqueKey<CPageViewRecord> KEY_C_PAGE_VIEW_PRIMARY = UniqueKeys0.KEY_C_PAGE_VIEW_PRIMARY;
    public static final UniqueKey<CSettingRecord> KEY_C_SETTING_PRIMARY = UniqueKeys0.KEY_C_SETTING_PRIMARY;
    public static final UniqueKey<CSettingRecord> KEY_C_SETTING_NAME_UNIQUE = UniqueKeys0.KEY_C_SETTING_NAME_UNIQUE;
    public static final UniqueKey<CTagRecord> KEY_C_TAG_PRIMARY = UniqueKeys0.KEY_C_TAG_PRIMARY;
    public static final UniqueKey<CTagRecord> KEY_C_TAG_NAME_UNIQUE = UniqueKeys0.KEY_C_TAG_NAME_UNIQUE;
    public static final UniqueKey<CUserRecord> KEY_C_USER_PRIMARY = UniqueKeys0.KEY_C_USER_PRIMARY;
    public static final UniqueKey<CUserRecord> KEY_C_USER_UK_E4YLW9V9NHRB2RJVY09B1Y7XS = UniqueKeys0.KEY_C_USER_UK_E4YLW9V9NHRB2RJVY09B1Y7XS;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<CArticleRecord> KEY_C_ARTICLE_PRIMARY = createUniqueKey(CArticle.C_ARTICLE, "KEY_c_article_PRIMARY", CArticle.C_ARTICLE.ID);
        public static final UniqueKey<CArticleTagRecord> KEY_C_ARTICLE_TAG_PRIMARY = createUniqueKey(CArticleTag.C_ARTICLE_TAG, "KEY_c_article_tag_PRIMARY", CArticleTag.C_ARTICLE_TAG.ARTICLE_ID, CArticleTag.C_ARTICLE_TAG.TAG_ID);
        public static final UniqueKey<CCatalogRecord> KEY_C_CATALOG_PRIMARY = createUniqueKey(CCatalog.C_CATALOG, "KEY_c_catalog_PRIMARY", CCatalog.C_CATALOG.ID);
        public static final UniqueKey<CCommentRecord> KEY_C_COMMENT_PRIMARY = createUniqueKey(CComment.C_COMMENT, "KEY_c_comment_PRIMARY", CComment.C_COMMENT.ID);
        public static final UniqueKey<CEmailConfigRecord> KEY_C_EMAIL_CONFIG_PRIMARY = createUniqueKey(CEmailConfig.C_EMAIL_CONFIG, "KEY_c_email_config_PRIMARY", CEmailConfig.C_EMAIL_CONFIG.ID);
        public static final UniqueKey<CEmailSendRecord> KEY_C_EMAIL_SEND_PRIMARY = createUniqueKey(CEmailSend.C_EMAIL_SEND, "KEY_c_email_send_PRIMARY", CEmailSend.C_EMAIL_SEND.ID);
        public static final UniqueKey<CGuestRecord> KEY_C_GUEST_PRIMARY = createUniqueKey(CGuest.C_GUEST, "KEY_c_guest_PRIMARY", CGuest.C_GUEST.ID);
        public static final UniqueKey<CGuestRecord> KEY_C_GUEST_EMAIL_UNIQUE = createUniqueKey(CGuest.C_GUEST, "KEY_c_guest_email_UNIQUE", CGuest.C_GUEST.EMAIL);
        public static final UniqueKey<CIpLocationRecord> KEY_C_IP_LOCATION_PRIMARY = createUniqueKey(CIpLocation.C_IP_LOCATION, "KEY_c_ip_location_PRIMARY", CIpLocation.C_IP_LOCATION.IP);
        public static final UniqueKey<CKeywordRecord> KEY_C_KEYWORD_PRIMARY = createUniqueKey(CKeyword.C_KEYWORD, "KEY_c_keyword_PRIMARY", CKeyword.C_KEYWORD.ID);
        public static final UniqueKey<CKeywordRecord> KEY_C_KEYWORD_KEYWORD_UNIQUE = createUniqueKey(CKeyword.C_KEYWORD, "KEY_c_keyword_keyword_UNIQUE", CKeyword.C_KEYWORD.KEYWORD);
        public static final UniqueKey<CPageViewRecord> KEY_C_PAGE_VIEW_PRIMARY = createUniqueKey(CPageView.C_PAGE_VIEW, "KEY_c_page_view_PRIMARY", CPageView.C_PAGE_VIEW.ID);
        public static final UniqueKey<CSettingRecord> KEY_C_SETTING_PRIMARY = createUniqueKey(CSetting.C_SETTING, "KEY_c_setting_PRIMARY", CSetting.C_SETTING.ID);
        public static final UniqueKey<CSettingRecord> KEY_C_SETTING_NAME_UNIQUE = createUniqueKey(CSetting.C_SETTING, "KEY_c_setting_name_UNIQUE", CSetting.C_SETTING.NAME);
        public static final UniqueKey<CTagRecord> KEY_C_TAG_PRIMARY = createUniqueKey(CTag.C_TAG, "KEY_c_tag_PRIMARY", CTag.C_TAG.ID);
        public static final UniqueKey<CTagRecord> KEY_C_TAG_NAME_UNIQUE = createUniqueKey(CTag.C_TAG, "KEY_c_tag_name_UNIQUE", CTag.C_TAG.NAME);
        public static final UniqueKey<CUserRecord> KEY_C_USER_PRIMARY = createUniqueKey(CUser.C_USER, "KEY_c_user_PRIMARY", CUser.C_USER.ID);
        public static final UniqueKey<CUserRecord> KEY_C_USER_UK_E4YLW9V9NHRB2RJVY09B1Y7XS = createUniqueKey(CUser.C_USER, "KEY_c_user_UK_e4ylw9v9nhrb2rjvy09b1y7xs", CUser.C_USER.USERNAME);
    }
}
